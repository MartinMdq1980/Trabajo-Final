{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport http from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    usuarios: [],\n    posts: [],\n    titulo: String\n  },\n  getters: {\n    usuarios(state) {\n      return state.usuarios;\n    },\n\n    posts(state) {\n      return state.posts;\n    }\n\n  },\n  mutations: {\n    setUsuarios(state, value) {\n      state.usuarios = value;\n    },\n\n    setPosts(state, value) {\n      state.posts = value;\n    },\n\n    setTitulo(state, value) {\n      state.titulo = value;\n    },\n\n    addUser(state, value) {\n      state.usuarios.push(value);\n    }\n\n  },\n  actions: {\n    async AddUser({\n      commit\n    }, parametros) {\n      try {\n        const response = await http.post(\"https://jsonplaceholder.typicode.com/users\", parametros);\n        commit('addUser', response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async Listar_Usuarios({\n      commit\n    }, parametros = {}) {\n      try {\n        const response = await http.get(\"https://jsonplaceholder.typicode.com/users\", {\n          params: parametros\n        });\n        commit('setUsuarios', response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    ActualizarTitulo({\n      commit\n    }, titulo) {\n      commit('setTitulo', titulo);\n    },\n\n    async Listar_Posts_Por_Usuario({\n      commit\n    }, id = {}) {\n      try {\n        const response = await http.get(`https://jsonplaceholder.typicode.com/users/${id}/posts`);\n        commit('setPosts', response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n});","map":{"version":3,"names":["Vue","Vuex","http","use","Store","state","usuarios","posts","titulo","String","getters","mutations","setUsuarios","value","setPosts","setTitulo","addUser","push","actions","AddUser","commit","parametros","response","post","data","error","console","log","Listar_Usuarios","get","params","ActualizarTitulo","Listar_Posts_Por_Usuario","id"],"sources":["C:/Users/Martin/Documents/GitHub/Trabajo Final/Trabajo-Final/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport http  from 'axios'\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    usuarios: [],\r\n    posts: [],\r\n    titulo: String,\r\n  },\r\n  getters: {\r\n    usuarios(state){\r\n      return state.usuarios\r\n    },\r\n    posts(state){\r\n      return state.posts\r\n    },\r\n  },\r\n  mutations: {\r\n    setUsuarios(state,value){\r\n      state.usuarios = value\r\n    },\r\n    setPosts(state,value){\r\n      state.posts = value\r\n    },\r\n    setTitulo(state,value){\r\n      state.titulo = value\r\n    },\r\n    addUser(state,value){\r\n      state.usuarios.push(value)\r\n    },\r\n\r\n  },\r\n  actions: {  \r\n    async AddUser({commit},parametros){\r\n      try {\r\n        const response = await http.post(\r\n          \"https://jsonplaceholder.typicode.com/users\",\r\n          parametros\r\n        );   \r\n        commit('addUser',response.data)  \r\n      } catch (error) {\r\n        console.log(error) \r\n      }\r\n    },\r\n    async Listar_Usuarios({commit},parametros={}){\r\n      try {\r\n        const response = await http.get(\r\n          \"https://jsonplaceholder.typicode.com/users\",\r\n          {params: parametros}\r\n        );\r\n        commit('setUsuarios',response.data)  \r\n      } catch (error) {\r\n        console.log(error) \r\n      }\r\n    },\r\n    ActualizarTitulo({commit},titulo)\r\n    {\r\n      commit('setTitulo',titulo)\r\n    },\r\n    async Listar_Posts_Por_Usuario({commit},id={}){\r\n      try {\r\n        const response = await http.get(\r\n          `https://jsonplaceholder.typicode.com/users/${id}/posts`\r\n        );\r\n        commit('setPosts',response.data)  \r\n      } catch (error) {\r\n        console.log(error) \r\n      }\r\n    }\r\n  }\r\n})\r\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAkB,OAAlB;AACAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,QAAQ,EAAE,EADL;IAELC,KAAK,EAAE,EAFF;IAGLC,MAAM,EAAEC;EAHH,CADqB;EAM5BC,OAAO,EAAE;IACPJ,QAAQ,CAACD,KAAD,EAAO;MACb,OAAOA,KAAK,CAACC,QAAb;IACD,CAHM;;IAIPC,KAAK,CAACF,KAAD,EAAO;MACV,OAAOA,KAAK,CAACE,KAAb;IACD;;EANM,CANmB;EAc5BI,SAAS,EAAE;IACTC,WAAW,CAACP,KAAD,EAAOQ,KAAP,EAAa;MACtBR,KAAK,CAACC,QAAN,GAAiBO,KAAjB;IACD,CAHQ;;IAITC,QAAQ,CAACT,KAAD,EAAOQ,KAAP,EAAa;MACnBR,KAAK,CAACE,KAAN,GAAcM,KAAd;IACD,CANQ;;IAOTE,SAAS,CAACV,KAAD,EAAOQ,KAAP,EAAa;MACpBR,KAAK,CAACG,MAAN,GAAeK,KAAf;IACD,CATQ;;IAUTG,OAAO,CAACX,KAAD,EAAOQ,KAAP,EAAa;MAClBR,KAAK,CAACC,QAAN,CAAeW,IAAf,CAAoBJ,KAApB;IACD;;EAZQ,CAdiB;EA6B5BK,OAAO,EAAE;IACP,MAAMC,OAAN,CAAc;MAACC;IAAD,CAAd,EAAuBC,UAAvB,EAAkC;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACqB,IAAL,CACrB,4CADqB,EAErBF,UAFqB,CAAvB;QAIAD,MAAM,CAAC,SAAD,EAAWE,QAAQ,CAACE,IAApB,CAAN;MACD,CAND,CAME,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF,CAXM;;IAYP,MAAMG,eAAN,CAAsB;MAACR;IAAD,CAAtB,EAA+BC,UAAU,GAAC,EAA1C,EAA6C;MAC3C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAAC2B,GAAL,CACrB,4CADqB,EAErB;UAACC,MAAM,EAAET;QAAT,CAFqB,CAAvB;QAIAD,MAAM,CAAC,aAAD,EAAeE,QAAQ,CAACE,IAAxB,CAAN;MACD,CAND,CAME,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF,CAtBM;;IAuBPM,gBAAgB,CAAC;MAACX;IAAD,CAAD,EAAUZ,MAAV,EAChB;MACEY,MAAM,CAAC,WAAD,EAAaZ,MAAb,CAAN;IACD,CA1BM;;IA2BP,MAAMwB,wBAAN,CAA+B;MAACZ;IAAD,CAA/B,EAAwCa,EAAE,GAAC,EAA3C,EAA8C;MAC5C,IAAI;QACF,MAAMX,QAAQ,GAAG,MAAMpB,IAAI,CAAC2B,GAAL,CACpB,8CAA6CI,EAAG,QAD5B,CAAvB;QAGAb,MAAM,CAAC,UAAD,EAAYE,QAAQ,CAACE,IAArB,CAAN;MACD,CALD,CAKE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF;;EApCM;AA7BmB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}